apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: metallb
    component: webhook-server
  name: webhook-server
  namespace: system
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: metallb
      component: webhook-server
  template:
    metadata:
      annotations:
        prometheus.io/port: '7472'
        prometheus.io/scrape: 'true'
      labels:
        app: metallb
        component: webhook-server
    spec:
      containers:
      - args:
        - --webhook-mode=onlywebhook
        - --port=7472
        - --log-level=info
        image: controller
        name: webhook-server
        ports:
        - containerPort: 7472
          name: monitoring
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: monitoring
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        env:
          - name: METALLB_BGP_TYPE
            value: "native"          
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      serviceAccountName: controller
      terminationGracePeriodSeconds: 0
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frr-k8s
    control-plane: webhook-server
  name: frr-k8s-webhook-server
  namespace: system
spec:
  selector:
    matchLabels:
      control-plane: webhook-server
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: frr-k8s-webhook-server
      labels:
        app: frr-k8s-webhook-server
        component: frr-k8s-webhook-server
        control-plane: webhook-server
    spec:
      containers:
      - args:
        - --log-level=info
        - --webhook-mode=onlywebhook
        - --namespace=$(NAMESPACE)
        - --health-probe-bind-address=:8081
        command:
        - /frr-k8s
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: frr-k8s
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: frr-k8s-webhook-server
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      serviceAccountName: frr-k8s-daemon
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: frr-k8s-webhook-server-cert
